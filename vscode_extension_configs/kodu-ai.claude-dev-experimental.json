{
  "isMigratedTaskCompleted": true,
  "isFirstInstall": false,
  "lastShownAnnouncementId": "2.3.0",
  "alwaysAllowWriteOnly": true,
  "terminalCompressionThreshold": 50000,
  "commandTimeout": 15,
  "metrics.global_task_request_count": 2478,
  "apiConfig": {
    "providerId": "anthropic",
    "modelId": "claude-3-7-sonnet-20250219"
  },
  "thinking": {
    "type": "enabled",
    "budget_tokens": 32000
  },
  "customInstructions": "- Always use `2>&1` when executing local commands, as stderr isn't visible to you.\n- When you expect to see a non-empty result from a terminal command execution, and you're getting nothing, it means the terminal integration broke. In that case, switch to using `2>&1 | tee /tmp/ai-[project-name]-[COUNTER].log` and use \"read file\" tool afterwards to review the output.\n- When you're stuck at using software libraries incorrectly, ask Perplexity MCP for a solution, and if its solution doesn't work, use Serper MCP to find the API reference and read it using curl to resolve your issue.\n- When you're creating something that needs to conform to a strict syntax, like URLs, query strings, SQL queries in code, JS code inside ERB templates, always use dedicated utilities that ensure the syntax is guaranteed valid. Examples:\n  - URL or URLSearchParams class over concats, splits, and regex\n  - SQL param binding over string concats\n  - HTML templating engines: use data-attributes to expose data for JS to consume `body(data-user=user.username)`, never generate code like `var user = \"#{user.username}\"`\n- Don't create stubs with pseudocode, unless explicitly asked. The implementation must be real. If you can't do it, ask the user for more information or conclude the task with failure.\n- When you need to execute `git diff`, use `git --no-pager diff` flag.\n- Do not use any mutable `git` commands like add, commit, checkout, reset, etc.\n- Don't pollute code history with trivial changes. Any changes to existing code or comments should be purposeful to justify a change.",
  "autoSummarize": true,
  "alwaysAllowReadOnly": true
}
